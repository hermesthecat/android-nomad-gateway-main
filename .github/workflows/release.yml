name: 🚀 Automated Release Build

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build-and-release:
    name: 📱 Build APK and Create Release
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 📱 Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          build-tools: 35.0.0
          cmake: 3.22.1

      - name: 🔧 Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🧹 Clean Project
        run: ./gradlew clean

      - name: 🏗️ Build Debug APK
        run: ./gradlew assembleDebug

      - name: 🏗️ Build Release APK
        run: ./gradlew assembleRelease

      - name: 🧪 Run Tests
        run: ./gradlew test

      - name: 📊 Run Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedCheck

      - name: 📝 Extract Release Notes
        id: extract_notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          # Extract release notes from CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            # Get content between current version and next version marker
            awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
            # If release notes are empty, create default ones
            if [ ! -s release_notes.md ]; then
              echo "Release $VERSION - Hermes Gateway" > release_notes.md
              echo "" >> release_notes.md
              echo "### What's New" >> release_notes.md
              echo "- Bug fixes and improvements" >> release_notes.md
              echo "" >> release_notes.md
              echo "### Installation" >> release_notes.md
              echo "Download the APK file below and install on your Android device." >> release_notes.md
            fi
          else
            echo "Release $VERSION - Hermes Gateway" > release_notes.md
            echo "Bug fixes and improvements" >> release_notes.md
          fi

      - name: 📦 Prepare Release Assets
        run: |
          # Create release directory
          mkdir -p release-assets

          # Copy APKs to release directory with proper names
          VERSION=${GITHUB_REF#refs/tags/}
          cp app/build/outputs/apk/debug/app-debug.apk "release-assets/hermes-gateway-${VERSION}-debug.apk"
          cp app/build/outputs/apk/release/app-release.apk "release-assets/hermes-gateway-${VERSION}-release.apk"

          # Generate checksums
          cd release-assets
          sha256sum *.apk > checksums.txt
          cd ..

          # Create build info
          echo "# Build Information" > release-assets/build-info.md
          echo "" >> release-assets/build-info.md
          echo "- **Version**: $VERSION" >> release-assets/build-info.md
          echo "- **Build Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release-assets/build-info.md
          echo "- **Commit**: $GITHUB_SHA" >> release-assets/build-info.md
          echo "- **Branch**: ${GITHUB_REF#refs/heads/}" >> release-assets/build-info.md
          echo "" >> release-assets/build-info.md
          echo "## Package Information" >> release-assets/build-info.md
          echo "- **Package Name**: com.keremgok.hermesgateway" >> release-assets/build-info.md
          echo "- **Target SDK**: 35" >> release-assets/build-info.md
          echo "- **Min SDK**: 26" >> release-assets/build-info.md

      - name: 🏷️ Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Hermes Gateway ${{ steps.extract_notes.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false

      - name: 📎 Upload Debug APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-assets/hermes-gateway-${{ steps.extract_notes.outputs.VERSION }}-debug.apk
          asset_name: hermes-gateway-${{ steps.extract_notes.outputs.VERSION }}-debug.apk
          asset_content_type: application/vnd.android.package-archive

      - name: 📎 Upload Release APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-assets/hermes-gateway-${{ steps.extract_notes.outputs.VERSION }}-release.apk
          asset_name: hermes-gateway-${{ steps.extract_notes.outputs.VERSION }}-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: 📎 Upload Checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-assets/checksums.txt
          asset_name: checksums.txt
          asset_content_type: text/plain

      - name: 📎 Upload Build Info
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-assets/build-info.md
          asset_name: build-info.md
          asset_content_type: text/markdown

      - name: 📢 Notify Success
        run: |
          echo "🎉 Release ${{ steps.extract_notes.outputs.VERSION }} created successfully!"
          echo "📱 APK files have been uploaded to the release."
          echo "🔗 Release URL: ${{ steps.create_release.outputs.html_url }}"
